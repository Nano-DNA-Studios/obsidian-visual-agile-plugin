name: Publish

on:
  release:
    types: [published]  
  
permissions:
  contents: write
  packages: write

jobs:
  setup:
    runs-on: ["self-hosted", "run-${{github.run_id}}"]
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Clone and Checkout the Repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: true

      - name: Install NPM Packages
        run: npm install
        shell: bash

  version:
    runs-on: ["self-hosted", "run-${{github.run_id}}"]
    needs: setup
    outputs:
      version: ${{ steps.get-tag-version.outputs.version }}

    steps:
      - name: Get Tag Version
        id: get-tag-version
        shell: bash
        run: |
          tagName="${{ github.event.release.tag_name }}"
          version="${tagName#v}"  # Removes the 'v' prefix if it exists
          echo "Extracted version $version from tag"
          echo "version=$version" >> "$GITHUB_OUTPUT"

  build-plugin:
    runs-on: ["self-hosted", "run-${{github.run_id}}"]
    needs: setup
    steps:
      - name: Build the Plugin
        shell: bash
        run: npm run build

  upload-plugin:
    runs-on: ["self-hosted", "run-${{github.run_id}}"]
    needs: [version, build-plugin]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      #- name: Compress Standalone Source
      #  shell: bash
      #  run: tar -czf ./obsidian-agile-plugin-${{ needs.version.outputs.version }}.tar.gz -C ./dist .

      - name: Upload Standalone Source
        uses: actions/upload-artifact@v4
        with:
          name: obsidian-agile-plugin-v${{ needs.version.outputs.version }}.tar.gz
          path: ./obsidian-agile-plugin-v${{ needs.version.outputs.version }}.tar.gz
          retention-days: 1

      - name: Upload Plugin to Release
        working-directory: ./
        shell: bash
        run: |
          echo "Uploading obsidian-agile-plugin-v${{ needs.version.outputs.version }}.tar.gz as a Release Asset"
          gh release upload "${{ github.event.release.tag_name }}" "obsidian-agile-plugin-v${{ needs.version.outputs.version }}.tar.gz" --repo ${{ github.repository }}